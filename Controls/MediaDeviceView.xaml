<views:ReactiveUserControl x:TypeArguments="views:MediaDeviceViewModel"
                                x:Class="QMediaVSIX.Views.MediaDeviceView"
                                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                xmlns:converters="clr-namespace:QMediaVSIX.Converters"
                                xmlns:views="clr-namespace:QMediaVSIX.Views"
                                xmlns:env="clr-namespace:QMediaVSIX.Environment"
                                xmlns:effects="clr-namespace:QMediaVSIX.Environment.Effects"
                                mc:Ignorable="d"
                                d:DesignHeight="48"
                                d:DesignWidth="300"
                                d:DataContext="{d:DesignInstance views:MediaDeviceViewModel}">
    <UserControl.Resources>
        <converters:MultipleConverters x:Key="VolumeToTextConverter">
            <converters:FloatToPercentConverter />
            <converters:IntToStringConverter />
        </converters:MultipleConverters>
        <converters:BoolToDoubleConverter x:Key="IsMutedToAppIconOpacityConverter"
                                          WhenTrue="0.35"
                                          WhenFalse="1.0" />
        <BooleanToVisibilityConverter x:Key="IsMutedToOverlayIconVisibilityConverter" />
        <Style x:Key="SpeedSliderThumbStyle"
               TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Border Name="outerBorder"
                                    Height="12"
                                    Width="12"
                                    Opacity="1"
                                    BorderThickness="2"
                                    CornerRadius="20" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="True">
                                <!-- Thumb -->
                                <Setter TargetName="outerBorder"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static env:Brushes.ScrollBarThumbGlyph}}"
                                        d:Value="#4D4D4D" />
                                <Setter TargetName="outerBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource {x:Static env:Brushes.ScrollBarThumbGlyph}}"
                                        d:Value="#4D4D4D" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <!-- Thumb Hover -->
                                <Setter TargetName="outerBorder"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static env:Brushes.ScrollBarThumbMouseOverBackground}}"
                                        d:Value="#999999" />
                                <Setter TargetName="outerBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource {x:Static env:Brushes.ScrollBarThumbMouseOverBackground}}"
                                        d:Value="#999999" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <!-- Thumb Disabled -->
                                <Setter TargetName="outerBorder"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static env:Brushes.ScrollBarDisabledBackground}}"
                                        d:Value="Red" />
                                <Setter TargetName="outerBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource {x:Static env:Brushes.ScrollBarDisabledBackground}}"
                                        d:Value="Red" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SpeedSliderRepeatButtonStyle"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"
                                                  MaxWidth="15" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"
                                                  MaxWidth="15" />
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="LeftButton"
                                  Grid.Column="0">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}"
                                                         Value="Left">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <!--Template for left button-->
                                <Rectangle Fill="Red" />
                            </Grid>

                            <Rectangle Grid.Column="1"
                                       Height="{TemplateBinding FontSize}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Stretch"
                                       StrokeThickness="0"
                                       Fill="{TemplateBinding BorderBrush}" />

                            <Grid x:Name="RightColumn"
                                  Grid.Column="2">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}"
                                                         Value="Right">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <!--Template for right button-->
                                <Rectangle Fill="Red" />
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="HorizontalSlider"
                         TargetType="{x:Type Slider}">
            <Grid Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
                                   MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
                         Visibility="Collapsed"
                         Fill="Green"
                         Placement="Top"
                         SnapsToDevicePixels="True"
                         Height="4"
                         Margin="0,0,0,2" />
                <Border x:Name="TrackBackground"
                        Grid.Row="1"
                        Margin="10,0"
                        BorderThickness="0"
                        VerticalAlignment="Center"
                        Height="1" />
                <Track x:Name="PART_Track"
                       Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <!-- Left (Filled) Bar -->
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                      BorderBrush="{DynamicResource {x:Static env:Brushes.ScrollBarThumbGlyph}}"
                                      d:BorderBrush="#4D4D4D"
                                      BorderThickness="5"
                                      FontSize="5"
                                      Style="{StaticResource SpeedSliderRepeatButtonStyle}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <!-- Right (Unfilled) Bar -->
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                      BorderBrush="{DynamicResource {x:Static env:Brushes.ScrollBarBackground}}"
                                      d:BorderBrush="#2E2E2E"
                                      BorderThickness="2"
                                      FontSize="2"
                                      Tag="Right"
                                      Style="{StaticResource SpeedSliderRepeatButtonStyle}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb"
                               Style="{StaticResource SpeedSliderThumbStyle}" />
                    </Track.Thumb>
                </Track>
                <TickBar x:Name="BottomTick"
                         Grid.Row="2"
                         Visibility="Collapsed"
                         Fill="Orange"
                         Placement="Bottom"
                         SnapsToDevicePixels="True"
                         Height="4"
                         Margin="0,2,0,0" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
                         Value="TopLeft">
                    <Setter TargetName="TopTick"
                            Property="Visibility"
                            Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
                         Value="BottomRight">
                    <Setter TargetName="BottomTick"
                            Property="Visibility"
                            Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
                         Value="Both">
                    <Setter TargetName="TopTick"
                            Property="Visibility"
                            Value="Visible" />
                    <Setter TargetName="BottomTick"
                            Property="Visibility"
                            Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <SelectiveScrollingGrid Margin="5">
        <SelectiveScrollingGrid.ColumnDefinitions>
            <ColumnDefinition Width="32" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="50" />
        </SelectiveScrollingGrid.ColumnDefinitions>
        <Rectangle Grid.Column="0"
                   Fill="Transparent" />
        <ToggleButton Grid.Column="0"
                      IsChecked="{Binding Mute, Mode=TwoWay}"
                      d:IsChecked="True"
                      Background="Transparent"
                      Foreground="Transparent"
                      BorderThickness="0"
                      Opacity="0.2">
            <ToggleButton.Effect>
                <effects:InvertEffect />
            </ToggleButton.Effect>
        </ToggleButton>
        <Grid Grid.Column="0">
            <Image Source="{Binding BindingImage, Mode=OneWay}"
                   d:Source="/QMediaVSIX;component/Resources/imageres_15.ico"
                   Stretch="Uniform"
                   IsHitTestVisible="False"
                   Opacity="{Binding Mute, Converter={StaticResource IsMutedToAppIconOpacityConverter}, Mode=OneWay}"/>
            <Image Source="/QMediaVSIX;component/Resources/Individual/VolumeMute.png"
                   IsHitTestVisible="False"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch"
                   MaxWidth="35"
                   Visibility="{Binding Mute, Converter={StaticResource IsMutedToOverlayIconVisibilityConverter}, Mode=OneWay}">
                <Image.Effect>
                    <effects:InvertEffect />
                </Image.Effect>
            </Image>
        </Grid>
        <DockPanel Grid.Column="2">
            <TextBlock Text="{Binding DisplayName, Mode=OneWay}"
                       d:Text="This is some stupidly long named application"
                       HorizontalAlignment="Center"
                       Foreground="{DynamicResource {x:Static env:Brushes.ScrollBarThumbGlyph}}"
                       d:Foreground="#4D4D4D"
                       DockPanel.Dock="Bottom"
                       TextWrapping="NoWrap"
                       TextTrimming="WordEllipsis"
                       VerticalAlignment="Center" />
            <!--<UniformGrid Columns="3"
                         DockPanel.Dock="Bottom">
                <Separator Opacity="0.3" />
                <TextBlock Text="{Binding DisplayName, Mode=OneWay}"
                           d:Text="opera.exe"
                           HorizontalAlignment="Center"
                           Foreground="{DynamicResource {x:Static env:Brushes.ScrollBarThumbGlyph}}"
                           d:Foreground="#4D4D4D"
                           VerticalAlignment="Center" />
                <Separator Opacity="0.3" />
            </UniformGrid>-->
            <Slider VerticalAlignment="Center"
                    HorizontalAlignment="Stretch"
                    Template="{DynamicResource HorizontalSlider}"
                    Minimum="0"
                    Maximum="1"
                    Margin="0,-5"
                    Value="{Binding Volume, Mode=TwoWay}"
                    d:Value="0.75">
                <Slider.ToolTip>
                    <TextBlock>
                        <Run Text="{Binding Volume, Converter={StaticResource VolumeToTextConverter}, Mode=OneWay}" />
                        <Run Text="%" />
                    </TextBlock>
                </Slider.ToolTip>
            </Slider>
        </DockPanel>
        <TextBlock Text="{Binding Volume, Converter={StaticResource VolumeToTextConverter}, Mode=OneWay}"
                   d:Text="75"
                   Grid.Column="4"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   FontSize="20"
                   Foreground="{DynamicResource {x:Static env:Brushes.ToolWindowText}}"
                   d:Foreground="#E5E5E5" />
    </SelectiveScrollingGrid>
</views:ReactiveUserControl>