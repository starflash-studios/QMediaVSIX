// Decompiled with JetBrains decompiler
// Type: Windows.UI.Xaml.Controls.Panel
// Assembly: Windows.Foundation.UniversalApiContract, Version=14.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime
// MVID: F62EFE2D-E4C7-4EB8-B17A-E7D33D1BB49F
// Assembly location: C:\Users\codyc\.nuget\packages\microsoft.windows.sdk.contracts\10.0.22000.196\ref\netstandard2.0\Windows.Foundation.UniversalApiContract.winmd

using System.Runtime.CompilerServices;
using Windows.Foundation;
using Windows.Foundation.Metadata;
using Windows.UI.Xaml.Markup;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Media.Animation;

namespace Windows.UI.Xaml.Controls
{
  /// <summary>Provides a base class for all Panel elements. Use Panel elements to position and arrange child objects in a UI page.</summary>
  [Composable(typeof (IPanelFactory), CompositionType.Protected, 65536, "Windows.Foundation.UniversalApiContract")]
  [WebHostHidden]
  [ContractVersion(typeof (UniversalApiContract), 65536)]
  [MarshalingBehavior(MarshalingType.Agile)]
  [Static(typeof (IPanelStatics), 65536, "Windows.Foundation.UniversalApiContract")]
  [Threading(ThreadingModel.Both)]
  [ContentProperty(Name = "Children")]
  public class Panel : FrameworkElement, IPanel, IPanel2
  {
    /// <summary>Provides base class initialization behavior for Panel derived classes.</summary>
    [MethodImpl]
    protected extern Panel();

    /// <summary>Gets the collection of child elements of the panel.</summary>
    /// <returns>The collection of child objects. The default is an empty collection.</returns>
    public extern UIElementCollection Children { [MethodImpl] get; }

    /// <summary>Gets or sets a Brush that fills the panel content area.</summary>
    /// <returns>The brush that fills the panel content area. The default is **null**, (a null brush) which is evaluated as Transparent for rendering.</returns>
    public extern Brush Background { [MethodImpl] get; [MethodImpl] set; }

    /// <summary>Gets a value that indicates whether this Panel is a container for UI items that are generated by an ItemsControl.</summary>
    /// <returns>**true** if this instance of Panel is an items host; otherwise, **false**. The default is **false**.</returns>
    public extern bool IsItemsHost { [MethodImpl] get; }

    /// <summary>Gets or sets the collection of Transition style elements that apply to child content of a Panel subclass.</summary>
    /// <returns>The strongly typed collection of Transition style elements.</returns>
    public extern TransitionCollection ChildrenTransitions { [MethodImpl] get; [MethodImpl] set; }

    /// <summary>Gets or sets an instance of BrushTransition to automatically animate changes to the Background property.</summary>
    /// <returns>An instance of BrushTransition to automatically animate changes to the Background; otherwise, **null**. The default is **null**.</returns>
    public extern BrushTransition BackgroundTransition { [MethodImpl] get; [MethodImpl] set; }

    /// <summary>Identifies the Background  dependency property.</summary>
    /// <returns>The identifier for the Background  dependency property.</returns>
    public static extern DependencyProperty BackgroundProperty { [MethodImpl] get; }

    /// <summary>Identifies the IsItemsHost dependency property.</summary>
    /// <returns>The identifier for the IsItemsHost dependency property.</returns>
    public static extern DependencyProperty IsItemsHostProperty { [MethodImpl] get; }

    /// <summary>Identifies the ChildrenTransitions dependency property.</summary>
    /// <returns>The identifier for the ChildrenTransitions dependency property.</returns>
    public static extern DependencyProperty ChildrenTransitionsProperty { [MethodImpl] get; }
  }
}
