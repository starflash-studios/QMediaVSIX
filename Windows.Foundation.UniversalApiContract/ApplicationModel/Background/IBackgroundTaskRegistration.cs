// Decompiled with JetBrains decompiler
// Type: Windows.ApplicationModel.Background.IBackgroundTaskRegistration
// Assembly: Windows.Foundation.UniversalApiContract, Version=14.0.0.0, Culture=neutral, PublicKeyToken=null, ContentType=WindowsRuntime
// MVID: F62EFE2D-E4C7-4EB8-B17A-E7D33D1BB49F
// Assembly location: C:\Users\codyc\.nuget\packages\microsoft.windows.sdk.contracts\10.0.22000.196\ref\netstandard2.0\Windows.Foundation.UniversalApiContract.winmd

using System;
using Windows.Foundation;
using Windows.Foundation.Metadata;

namespace Windows.ApplicationModel.Background
{
  /// <summary>Provides access to a registered background task.</summary>
  [Guid(275074242, 41582, 17343, 140, 18, 31, 180, 13, 191, 191, 160)]
  [ContractVersion(typeof (UniversalApiContract), 65536)]
  public interface IBackgroundTaskRegistration
  {
    /// <summary>Gets the identifier of a registered background task.</summary>
    /// <returns>The unique identifier for the task. This identifier is generated by the system when the task is registered.</returns>
    Guid TaskId { get; }

    /// <summary>Gets the name of a registered background task.</summary>
    /// <returns>The description specified with BackgroundTaskBuilder.Name when the task was created.</returns>
    string Name { get; }

    /// <summary>Attaches a progress event handler to the registered background task.</summary>
    event BackgroundTaskProgressEventHandler Progress;

    /// <summary>Attaches a completed event handler to the registered background task.</summary>
    event BackgroundTaskCompletedEventHandler Completed;

    /// <summary>Unregisters a registered background task.</summary>
    /// <param name="cancelTask">True if currently running instances of this background task should be canceled. If this parameter is false, currently running instances of this background task should be allowed to finish. Canceled instances receive a Canceled event with a BackgroundTaskCancellationReason of **Abort**.</param>
    void Unregister(bool cancelTask);
  }
}
